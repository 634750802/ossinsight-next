import {DataService} from "@ossinsight/data-api";
import { NextRequest, NextResponse } from 'next/server';
import {APIError} from "../../packages/data-api/src";

export const runtime = 'edge'

const TEMPLATE_SQL = `
{{ templateSQL }}
`

const ENDPOINT_CONFIG = {{ endpointConfig }}

const dataService = new DataService({
  url: process.env.DATABASE_URL
});

export async function GET(req: NextRequest) {
  let result;
  try {
    result = await dataService.handleQueryEndpoint(req, TEMPLATE_SQL, ENDPOINT_CONFIG);
  } catch (err) {
    console.error(err);
    if (err instanceof APIError) {
      return new Response(JSON.stringify({ message: err.message }), {
        status: err.statusCode,
      });
    } else {
      return new Response(JSON.stringify({ message: "Internal Server Error" }), {
        status: 500,
      });
    }
  }

  return new Response(JSON.stringify(result), {
    status: 200,
    headers: {
      'Cache-Control': 'max-age=60',
      'CDN-Cache-Control': 'max-age=300',
      'Vercel-CDN-Cache-Control': 'max-age=3600',
    },
  });
}
